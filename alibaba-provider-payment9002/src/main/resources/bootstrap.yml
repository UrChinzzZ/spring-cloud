#nacos 配置
server:
  port: 9002
spring:
  profiles:
    active: dev  #测试坏境
  application:
    name: nacos-payment-provider
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.208.131:1111   #nacos地址
        group: DEV_GROUP #开发分组
        namespace: a76cb8aa-52c5-4a67-ba98-d854aed04aba
      sentinel:
        transport:
  #        监控地址
          dashboard: 192.168.208.131:8858
          # 默认端口  8719  如果被占用 自定加一端口
          port: 8719
      config:
        server-addr: 192.168.208.131:1111 #nacos地址
        namespace: a76cb8aa-52c5-4a67-ba98-d854aed04aba #开发空间
        group: DEV_GROUP #测试分组
        file-extension: yaml
        #        group: TEST_GROUP #测试分组
        prefix: urchin
rocketmq:
  producer:
    isOnOff: on
    #发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
    groupName: ${spring.application.name}
    #mq的nameserver地址
    namesrvAddr: 192.168.208.131:10909,192.168.208.131:10911
    #生产者的组名
    producerGroup: urchin_Producer
    #消息最大长度 默认1024*4(4M)
    maxMessageSize: 4096
    #发送消息超时时间,默认3000
    sendMsgTimeout: 3000
    #发送消息失败重试次数，默认2
    retryTimesWhenSendFailed: 2
  consumer:
    isOnOff: on
    groupName: ${spring.application.name}
    #mq的nameserver地址
    namesrvAddr: 192.168.208.131:10909,192.168.208.131:10911
    PushConsumer: test_Consumer
    #该消费者订阅的主题和tags("*"号表示订阅该主题下所有的tags),格式：topic~tag1||tag2||tag3;topic2~*;
    topics: futaotopic~*;
    consumeThreadMin: 20
    consumeThreadMax: 64
    #设置一次消费消息的条数，默认为1条
    consumeMessageBatchMaxSize: 1
    reConsumerTimes: 3
management:
  endpoints:
    web:
      exposure:
        include: '*'
